diff --git a/libavcodec/Makefile b/libavcodec/Makefile
index ec57e53e30..0085f00878 100644
--- a/libavcodec/Makefile
+++ b/libavcodec/Makefile
@@ -1205,6 +1205,7 @@ OBJS-$(CONFIG_RV34_PARSER)             += rv34_parser.o
 OBJS-$(CONFIG_SBC_PARSER)              += sbc_parser.o
 OBJS-$(CONFIG_SIPR_PARSER)             += sipr_parser.o
 OBJS-$(CONFIG_TAK_PARSER)              += tak_parser.o tak.o
+OBJS-$(CONFIG_TIF_PARSER)              += tif_parser.o
 OBJS-$(CONFIG_VC1_PARSER)              += vc1_parser.o vc1.o vc1data.o  \
                                           wmv2data.o
 OBJS-$(CONFIG_VP3_PARSER)              += vp3_parser.o
diff --git a/libavcodec/parsers.c b/libavcodec/parsers.c
index 5128009cd4..0d639c7bf2 100644
--- a/libavcodec/parsers.c
+++ b/libavcodec/parsers.c
@@ -70,6 +70,7 @@ extern const AVCodecParser ff_rv34_parser;
 extern const AVCodecParser ff_sbc_parser;
 extern const AVCodecParser ff_sipr_parser;
 extern const AVCodecParser ff_tak_parser;
+extern const AVCodecParser ff_tif_parser;
 extern const AVCodecParser ff_vc1_parser;
 extern const AVCodecParser ff_vorbis_parser;
 extern const AVCodecParser ff_vp3_parser;
diff --git a/libavcodec/tif_parser.c b/libavcodec/tif_parser.c
new file mode 100644
index 0000000000..94f7b38c3b
--- /dev/null
+++ b/libavcodec/tif_parser.c
@@ -0,0 +1,98 @@
+/*
+ * TIFF parser derived from dpx parser
+ * Modified from Copyright (c) 2013 Paul B Mahol
+ * Copyright (c) 2024 DeweyVision Corp.
+ *
+ * This file is part of FFmpeg.
+ *
+ * FFmpeg is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * FFmpeg is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with FFmpeg; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+/**
+ * @file
+ * TIFF parser
+ */
+
+#include "libavutil/bswap.h"
+#include "libavutil/common.h"
+#include <libavutil/intreadwrite.h>
+
+#include "parser.h"
+
+#define TIFF_HEADER_SIZE 8
+
+typedef struct TIFFParseContext {
+    ParseContext pc;
+} TIFFParseContext;
+
+static int tiff_parse(AVCodecParserContext *s, AVCodecContext *avctx,
+                     const uint8_t **poutbuf, int *poutbuf_size,
+                     const uint8_t *buf, int buf_size)
+{
+    const uint8_t *ptr = buf;
+    uint16_t byteOrder;
+    uint16_t tiffMarker;
+    uint32_t ifdOffset;
+
+    // Check for the TIFF header
+    if (buf_size < 8) {
+        av_log(avctx, AV_LOG_ERROR, "DeweyVision: Input buffer too small.\n");
+        *poutbuf = NULL;
+        *poutbuf_size = 0;
+        return buf_size;
+    }
+
+    byteOrder = AV_RB16(ptr);
+    tiffMarker = AV_RB16(ptr + 2);
+
+    if (byteOrder != 0x4949 && byteOrder != 0x4D4D) {
+        // Invalid byte order
+        av_log(avctx, AV_LOG_ERROR, "DeweyVision: Invalid byte order.\n");
+        *poutbuf = NULL;
+        *poutbuf_size = 0;
+        return buf_size;
+    }
+
+    if (tiffMarker != 0x002A) {
+        // Invalid TIFF marker
+        av_log(avctx, AV_LOG_ERROR, "DeweyVision: Invalid TIFF marker.\n");
+        *poutbuf = NULL;
+        *poutbuf_size = 0;
+        return buf_size;
+    }
+
+    // Read the offset to the Image File Directory (IFD)
+    ifdOffset = AV_RB32(ptr + 4);
+
+    // Check if the IFD offset is within the buffer
+    if (ifdOffset >= buf_size - 8) {
+        av_log(avctx, AV_LOG_ERROR, "DeweyVision: IFD offset is out of bounds.\n");
+        *poutbuf = NULL;
+        *poutbuf_size = 0;
+        return buf_size;
+    }
+
+    *poutbuf = buf + ifdOffset;
+    *poutbuf_size = buf_size - ifdOffset;
+
+    return 8; // Return the number of bytes consumed (TIFF header)
+}
+
+const AVCodecParser ff_tif_parser = {
+    .codec_ids      = { AV_CODEC_ID_TIFF },
+    .priv_data_size = sizeof(TIFFParseContext),
+    .parser_parse   = tiff_parse,
+    .parser_close   = ff_parse_close,
+};
